{
  "name": "gmsmith",
  "description": "GM engine for spritesmith",
  "version": "0.4.5",
  "homepage": "https://github.com/twolfson/gmsmith",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/gmsmith.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/gmsmith/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/gmsmith/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/gmsmith",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "preinstall": "gm -version || convert -version",
    "test": "mocha --timeout 60000"
  },
  "dependencies": {
    "async": "~0.2.7",
    "gm": "~1.4.2",
    "obj-extend": "~0.1.0",
    "temporary": "0.0.5",
    "which": "~1.0.5"
  },
  "devDependencies": {
    "grunt": "~0.3.17",
    "mocha": "~1.21.4",
    "spritesmith-engine-test": "~2.0.0"
  },
  "keywords": [
    "phantomjs",
    "spritesmith",
    "image",
    "layout"
  ],
  "readme": "# gmsmith [![Build status](https://travis-ci.org/twolfson/gmsmith.png?branch=master)](https://travis-ci.org/twolfson/gmsmith)\n\n[GM][gm] engine for [spritesmith][spritesmith].\n\n[gm]: http://aheckmann.github.io/gm/\n[spritesmith]: https://github.com/Ensighten/spritesmith\n\n## Requirements\n`gmsmith` depends on [gm](https://github.com/aheckmann/gm) which depends on [Graphics Magick](http://www.graphicsmagick.org/).\n\nI have found it is best to install from the site rather than through a package manager (e.g. `apt-get`) to get the latest as well as without transparency issues.\n\nThis module has been developed and tested against `1.3.17`.\n\n> Alertnatively, you can use ImageMagick which is implicitly discovered if `gm` is not installed.\n> http://www.imagemagick.org/script/index.php\n\n## Getting Started\nInstall the module with: `npm install gmsmith`\n\n```js\n// Convert images into gmsmith objects\nvar images = ['img1.jpg', 'img2.png'];\ngmsmith.createImages(this.images, function handleImages (err, imgs) {\n  // Create a canvas to draw onto (200 pixels wide, 300 pixels tall)\n  gmsmith.createCanvas(200, 200, function (err, canvas) {\n    // Add each image at a specific location (upper left corner = {x, y})\n    var coordinatesArr = [{x: 0, y: 0}, {x: 50, y: 50}];\n    imgs.forEach(function (img, i) {\n      var coordinates = coordinatesArr[i];\n      canvas.addImage(img, coordinates.x, coordinates.y);\n    }, canvas);\n\n    // Export canvas to image\n    canvas['export']({format: 'png'}, function (err, result) {\n      result; // Binary string representing a PNG image of the canvas\n    });\n  });\n});\n```\n\n## Documentation\nThis module was built to the specification for all spritesmith modules.\n\nhttps://github.com/twolfson/spritesmith-engine-test\n\n### canvas\\['export'\\](options, cb)\nThese are options specific `gmsmith`\n\n- options `Object`\n  - quality `Number` - Quality of output image on a scale from 0 to 100\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint using [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson/\n\n## License\nCopyright (c) 2013 Todd Wolfson\n\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "gmsmith@0.4.5",
  "_from": "gmsmith@~0.4.1"
}
